parameters:
  name: ''
  image: ''
  variables: {}

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.image }}
  variables:
    ${{ insert }}: ${{ parameters.variables }}
  steps:

  - powershell: |
      # LLVM's (clang-cl) MSBuild integration is outdated so we use Ninja instead.
      iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
      scoop install ninja cmake llvm --global
    displayName: Install

    # Azure Pipelines resets environment variables between steps so we have to
    # add the required environment variables at the start of each step.

  - script: |
      set PATH=C:\ProgramData\scoop\shims;%PATH%
      call "$(VCVARSALL)" $(PLATFORM)
      cmake ^
        -B $(Build.SourcesDirectory)\build ^
        -S $(Build.SourcesDirectory) ^
        -G Ninja ^
        -DCMAKE_BUILD_TYPE=Debug ^
        -DBUILD_SHARED_LIBS=ON ^
        -DH3C_TEST=ON ^
        -DH3C_WARNINGS_AS_ERRORS=ON ^
        -DH3C_TIDY=ON
    displayName: Configure

  - script: |
      set PATH=C:\ProgramData\scoop\shims;%PATH%
      call "$(VCVARSALL)" $(PLATFORM)
      cmake --build $(Build.SourcesDirectory)\build --parallel 2
    displayName: Build

  - script: |
      set PATH=$(Build.SourcesDirectory)\build\h3c\lib;%PATH%
      build\test
    displayName: Test
